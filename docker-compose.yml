version: "3"

services:
    influxdb:
        container_name: influxdb.container
        build: ./docker/influxdb
        networks:
            - ocoderfest-msales
        ports:
            - 8086:8086

    grafana:
        container_name: grafana.container
        build: ./docker/grafana
        restart: always
        networks:
            - ocoderfest-msales
        depends_on:
            - mysql
            - influxdb

    mysql:
        container_name: mysql.container
        build: ./docker/mysql
        networks:
            - ocoderfest-msales
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_DATABASE=grafana

    telegraf:
        container_name: telegraf.container
        build: ./docker/telegraf
        restart: always
        networks:
            - ocoderfest-msales
        ports:
            - 8125:8125/udp

    mongo:
        container_name: mongo.container
        build: ./docker/mongo
        networks:
            - ocoderfest-msales

    elasticsearch:
        container_name: elasticsearch.container
        build: ./docker/elasticsearch
        command: "elasticsearch -Des.cluster.name='graylog'"
        networks:
            - ocoderfest-msales

    graylog:
        container_name: graylog.container
        build: ./docker/graylog
        environment:
            GRAYLOG_PASSWORD_SECRET: somepasswordpepper
            GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
            GRAYLOG_WEB_ENDPOINT_URI: http://graylog.ocoderfest.msales:8888/api
        depends_on:
            - mongo
            - elasticsearch
        networks:
            - ocoderfest-msales

    reverse-proxy:
        container_name: reverse-proxy.container
        build: ./docker/reverse-proxy
        restart: always
        networks:
            - ocoderfest-msales
        ports:
            - 8888:8888
        depends_on:
            - influxdb
            - grafana
            - graylog

networks:
    ocoderfest-msales:
        external: true
